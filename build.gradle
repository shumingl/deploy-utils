group = project_group
version = project_version

ext {
    types = [
            "dpy-common"  : "lib",
            "dpy-packager": "exe"
    ]
    environment = "snapshot"
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url = 'http://maven.aliyun.com/nexus/content/groups/public/' }
    }
}

subprojects { prj ->

    apply plugin: 'java'
    apply from: "$rootProject.projectDir/dependencies.gradle"
    apply from: "$rootProject.projectDir/utils.gradle"
    group = project_group
    version = project_version
    sourceCompatibility = project_jdk
    targetCompatibility = project_jdk

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    tasks.withType(JavaExec) {
        jvmArgs += ['-Dfile.encoding=UTF-8']
    }
    if (types[prj.name] == 'exe') { /* 可运行项目 打包配置 */
        apply plugin: 'application'
        applicationDefaultJvmArgs = ['-Dfile.encoding=UTF-8']
        startScripts {
            doLast {
                unixScript.text = unixScript.text.replace('CLASSPATH=\$APP_HOME/', 'CLASSPATH=\$APP_HOME:\$APP_HOME/')
                windowsScript.text = windowsScript.text.replace('CLASSPATH=%APP_HOME%\\', 'CLASSPATH=%APP_HOME%;%APP_HOME%\\')
            }
        }
    }

    jar {
        excludes = ['config'] /* 打JAR包时忽略配置文件 */
        doFirst {
            manifest = defaultManifest([project: prj, projectVendor: project_vendor])
        }
    }
    configurations {
        all*.exclude module: 'slf4j-log4j12'
        all*.exclude module: 'commons-logging-api'
    }
}
